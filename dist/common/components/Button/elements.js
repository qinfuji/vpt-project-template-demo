import styled, { css } from 'styled-components';
import Link from 'react-router-dom/Link';
import theme from 'common/theme';

const getBackgroundColor = ({
  theme: internalTheme,
  disabled,
  red,
  secondary,
  danger
}) => {
  if (disabled) return `background-color: ${theme.background2.darken(0.1)()}`;

  if (internalTheme && internalTheme['button.background']) {
    return `background-color: ${internalTheme['button.background']}`;
  }

  if (danger) return `background-color: ${theme.dangerBackground()}`;
  if (secondary) return `background-color: transparent`;
  if (red) return `background-color: ${theme.red.darken(0.2)()}`;
  return `background-color: #40A9F3;`;
};

const getBackgroundHoverColor = ({
  theme: internalTheme,
  disabled,
  red,
  secondary,
  danger
}) => {
  if (disabled) return `background-color: ${theme.background2.darken(0.1)()}`;

  if (internalTheme && internalTheme['button.hoverBackground']) {
    return `background-color: ${internalTheme['button.hoverBackground']}`;
  }

  if (danger) return `background-color: #E25D6A`;
  if (secondary) return `background-color: #66b9f4`;
  if (red) return `background-color: #F27777`;
  return `background-color: #66b9f4;`;
};

const getColor = ({
  disabled,
  secondary
}) => {
  if (disabled) return theme.background2.lighten(1.5)();
  if (secondary) return `#66b9f4`;
  return 'white';
};

const getHoverColor = ({
  secondary
}) => {
  if (secondary) return 'color: white';
  return '';
};

const getBorder = ({
  theme: internalTheme,
  secondary,
  danger,
  red,
  disabled
}) => {
  if (disabled) return '2px solid #161A1C';

  if (internalTheme && internalTheme['button.hoverBackground']) {
    return `2px solid ${internalTheme['button.hoverBackground']}`;
  }

  if (secondary) return `2px solid #66B9F4`;
  if (red) return '2px solid #F27777';
  if (danger) return '2px solid #E25D6A';
  return '2px solid #66B9F4';
};

const styles = css`
  transition: 0.3s ease all;

  border: none;
  outline: none;
  ${props => getBackgroundColor(props)};
  background-size: 720%;

  border: ${props => getBorder(props)};
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ${props => getColor(props)};
  font-weight: 400;
  width: ${props => props.block ? '100%' : 'inherit'};

  user-select: none;
  text-decoration: none;
  font-weight: 600;

  ${props => !props.disabled && `
  cursor: pointer;
  `};

  &:hover {
    ${props => getBackgroundHoverColor(props)};
    ${props => getHoverColor(props)};
  }
`;
export const LinkButton = styled(Link)`
  ${styles};
`;
export const AButton = styled.a`
  ${styles};
`;
export const Button = styled.button`
  ${styles};
`;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NsaWVudC9jb21tb24vY29tcG9uZW50cy9CdXR0b24vZWxlbWVudHMuanMiXSwibmFtZXMiOlsic3R5bGVkIiwiY3NzIiwiTGluayIsInRoZW1lIiwiZ2V0QmFja2dyb3VuZENvbG9yIiwiaW50ZXJuYWxUaGVtZSIsImRpc2FibGVkIiwicmVkIiwic2Vjb25kYXJ5IiwiZGFuZ2VyIiwiYmFja2dyb3VuZDIiLCJkYXJrZW4iLCJkYW5nZXJCYWNrZ3JvdW5kIiwiZ2V0QmFja2dyb3VuZEhvdmVyQ29sb3IiLCJnZXRDb2xvciIsImxpZ2h0ZW4iLCJnZXRIb3ZlckNvbG9yIiwiZ2V0Qm9yZGVyIiwic3R5bGVzIiwicHJvcHMiLCJibG9jayIsIkxpbmtCdXR0b24iLCJBQnV0dG9uIiwiYSIsIkJ1dHRvbiIsImJ1dHRvbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsTUFBUCxJQUFpQkMsR0FBakIsUUFBNEIsbUJBQTVCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQix1QkFBakI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLGNBQWxCOztBQUVBLE1BQU1DLGtCQUFrQixHQUFHLENBQUM7QUFDMUJELEVBQUFBLEtBQUssRUFBRUUsYUFEbUI7QUFFMUJDLEVBQUFBLFFBRjBCO0FBRzFCQyxFQUFBQSxHQUgwQjtBQUkxQkMsRUFBQUEsU0FKMEI7QUFLMUJDLEVBQUFBO0FBTDBCLENBQUQsS0FNckI7QUFDSixNQUFJSCxRQUFKLEVBQWMsT0FBUSxxQkFBb0JILEtBQUssQ0FBQ08sV0FBTixDQUFrQkMsTUFBbEIsQ0FBeUIsR0FBekIsR0FBZ0MsRUFBNUQ7O0FBQ2QsTUFBSU4sYUFBYSxJQUFJQSxhQUFhLENBQUMsbUJBQUQsQ0FBbEMsRUFBeUQ7QUFDdkQsV0FBUSxxQkFBb0JBLGFBQWEsQ0FBQyxtQkFBRCxDQUFzQixFQUEvRDtBQUNEOztBQUNELE1BQUlJLE1BQUosRUFBWSxPQUFRLHFCQUFvQk4sS0FBSyxDQUFDUyxnQkFBTixFQUF5QixFQUFyRDtBQUNa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Q0FESjtBQUdQLE9BQU8sTUFBTU0sTUFBTSxHQUFHeEIsTUFBTSxDQUFDeUIsTUFBTztJQUNoQ1AsTUFBTztDQURKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCwgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgTGluayBmcm9tICdyZWFjdC1yb3V0ZXItZG9tL0xpbmsnO1xuaW1wb3J0IHRoZW1lIGZyb20gJ2NvbW1vbi90aGVtZSc7XG5cbmNvbnN0IGdldEJhY2tncm91bmRDb2xvciA9ICh7XG4gIHRoZW1lOiBpbnRlcm5hbFRoZW1lLFxuICBkaXNhYmxlZCxcbiAgcmVkLFxuICBzZWNvbmRhcnksXG4gIGRhbmdlcixcbn0pID0+IHtcbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuYmFja2dyb3VuZDIuZGFya2VuKDAuMSkoKX1gO1xuICBpZiAoaW50ZXJuYWxUaGVtZSAmJiBpbnRlcm5hbFRoZW1lWydidXR0b24uYmFja2dyb3VuZCddKSB7XG4gICAgcmV0dXJuIGBiYWNrZ3JvdW5kLWNvbG9yOiAke2ludGVybmFsVGhlbWVbJ2J1dHRvbi5iYWNrZ3JvdW5kJ119YDtcbiAgfVxuICBpZiAoZGFuZ2VyKSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuZGFuZ2VyQmFja2dyb3VuZCgpfWA7XG4gIGlmIChzZWNvbmRhcnkpIHJldHVybiBgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRgO1xuICBpZiAocmVkKSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUucmVkLmRhcmtlbigwLjIpKCl9YDtcblxuICByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICM0MEE5RjM7YDtcbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRIb3ZlckNvbG9yID0gKHtcbiAgdGhlbWU6IGludGVybmFsVGhlbWUsXG4gIGRpc2FibGVkLFxuICByZWQsXG4gIHNlY29uZGFyeSxcbiAgZGFuZ2VyLFxufSkgPT4ge1xuICBpZiAoZGlzYWJsZWQpIHJldHVybiBgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5iYWNrZ3JvdW5kMi5kYXJrZW4oMC4xKSgpfWA7XG4gIGlmIChpbnRlcm5hbFRoZW1lICYmIGludGVybmFsVGhlbWVbJ2J1dHRvbi5ob3ZlckJhY2tncm91bmQnXSkge1xuICAgIHJldHVybiBgYmFja2dyb3VuZC1jb2xvcjogJHtpbnRlcm5hbFRoZW1lWydidXR0b24uaG92ZXJCYWNrZ3JvdW5kJ119YDtcbiAgfVxuICBpZiAoZGFuZ2VyKSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICNFMjVENkFgO1xuICBpZiAoc2Vjb25kYXJ5KSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICM2NmI5ZjRgO1xuICBpZiAocmVkKSByZXR1cm4gYGJhY2tncm91bmQtY29sb3I6ICNGMjc3NzdgO1xuXG4gIHJldHVybiBgYmFja2dyb3VuZC1jb2xvcjogIzY2YjlmNDtgO1xufTtcblxuY29uc3QgZ2V0Q29sb3IgPSAoeyBkaXNhYmxlZCwgc2Vjb25kYXJ5IH0pID0+IHtcbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gdGhlbWUuYmFja2dyb3VuZDIubGlnaHRlbigxLjUpKCk7XG4gIGlmIChzZWNvbmRhcnkpIHJldHVybiBgIzY2YjlmNGA7XG5cbiAgcmV0dXJuICd3aGl0ZSc7XG59O1xuXG5jb25zdCBnZXRIb3ZlckNvbG9yID0gKHsgc2Vjb25kYXJ5IH0pID0+IHtcbiAgaWYgKHNlY29uZGFyeSkgcmV0dXJuICdjb2xvcjogd2hpdGUnO1xuXG4gIHJldHVybiAnJztcbn07XG5cbmNvbnN0IGdldEJvcmRlciA9ICh7XG4gIHRoZW1lOiBpbnRlcm5hbFRoZW1lLFxuICBzZWNvbmRhcnksXG4gIGRhbmdlcixcbiAgcmVkLFxuICBkaXNhYmxlZCxcbn0pID0+IHtcbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gJzJweCBzb2xpZCAjMTYxQTFDJztcbiAgaWYgKGludGVybmFsVGhlbWUgJiYgaW50ZXJuYWxUaGVtZVsnYnV0dG9uLmhvdmVyQmFja2dyb3VuZCddKSB7XG4gICAgcmV0dXJuIGAycHggc29saWQgJHtpbnRlcm5hbFRoZW1lWydidXR0b24uaG92ZXJCYWNrZ3JvdW5kJ119YDtcbiAgfVxuICBpZiAoc2Vjb25kYXJ5KSByZXR1cm4gYDJweCBzb2xpZCAjNjZCOUY0YDtcbiAgaWYgKHJlZCkgcmV0dXJuICcycHggc29saWQgI0YyNzc3Nyc7XG4gIGlmIChkYW5nZXIpIHJldHVybiAnMnB4IHNvbGlkICNFMjVENkEnO1xuXG4gIHJldHVybiAnMnB4IHNvbGlkICM2NkI5RjQnO1xufTtcblxuY29uc3Qgc3R5bGVzID0gY3NzYFxuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2UgYWxsO1xuXG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgJHtwcm9wcyA9PiBnZXRCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgYmFja2dyb3VuZC1zaXplOiA3MjAlO1xuXG4gIGJvcmRlcjogJHtwcm9wcyA9PiBnZXRCb3JkZXIocHJvcHMpfTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc2l6ZTogMS4xMjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogJHtwcm9wcyA9PiBnZXRDb2xvcihwcm9wcyl9O1xuICBmb250LXdlaWdodDogNDAwO1xuICB3aWR0aDogJHtwcm9wcyA9PiAocHJvcHMuYmxvY2sgPyAnMTAwJScgOiAnaW5oZXJpdCcpfTtcblxuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXdlaWdodDogNjAwO1xuXG4gICR7cHJvcHMgPT5cbiAgICAhcHJvcHMuZGlzYWJsZWQgJiZcbiAgICBgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYH07XG5cbiAgJjpob3ZlciB7XG4gICAgJHtwcm9wcyA9PiBnZXRCYWNrZ3JvdW5kSG92ZXJDb2xvcihwcm9wcyl9O1xuICAgICR7cHJvcHMgPT4gZ2V0SG92ZXJDb2xvcihwcm9wcyl9O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgTGlua0J1dHRvbiA9IHN0eWxlZChMaW5rKWBcbiAgJHtzdHlsZXN9O1xuYDtcbmV4cG9ydCBjb25zdCBBQnV0dG9uID0gc3R5bGVkLmFgXG4gICR7c3R5bGVzfTtcbmA7XG5leHBvcnQgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgJHtzdHlsZXN9O1xuYDtcbiJdfQ==