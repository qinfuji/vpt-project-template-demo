import key from 'keymaster';
export default {
  namespace: 'comp1',
  state: {
    value: '测试１'
  },
  effects: {
    *message1(_, {
      put
    }) {
      // console.log('effects');
      yield put({
        type: 'message',
        payload: {
          value: 'effects ,message'
        }
      });
    }

  },
  reducers: {
    message(state, action) {
      return { ...state,
        ...action.payload
      };
    }

  },
  subscriptions: {
    setup({
      dispatch,
      history
    }) {
      dispatch({
        type: 'message',
        payload: {
          value: 'comp1'
        }
      });
    }

  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NsaWVudC9wYWdlcy9FeGFtcGxlUGFnZS9tb2R1bGUvQ29tcE1vZGUxLmpzIl0sIm5hbWVzIjpbImtleSIsIm5hbWVzcGFjZSIsInN0YXRlIiwidmFsdWUiLCJlZmZlY3RzIiwibWVzc2FnZTEiLCJfIiwicHV0IiwidHlwZSIsInBheWxvYWQiLCJyZWR1Y2VycyIsIm1lc3NhZ2UiLCJhY3Rpb24iLCJzdWJzY3JpcHRpb25zIiwic2V0dXAiLCJkaXNwYXRjaCIsImhpc3RvcnkiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEdBQVAsTUFBZ0IsV0FBaEI7QUFFQSxlQUFlO0FBQ2JDLEVBQUFBLFNBQVMsRUFBRSxPQURFO0FBRWJDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxLQUFLLEVBQUU7QUFERixHQUZNO0FBS2JDLEVBQUFBLE9BQU8sRUFBRTtBQUNQLEtBQUNDLFFBQUQsQ0FBVUMsQ0FBVixFQUFhO0FBQUVDLE1BQUFBO0FBQUYsS0FBYixFQUFzQjtBQUNwQjtBQUNBLFlBQU1BLEdBQUcsQ0FBQztBQUNSQyxRQUFBQSxJQUFJLEVBQUUsU0FERTtBQUVSQyxRQUFBQSxPQUFPLEVBQUU7QUFDUE4sVUFBQUEsS0FBSyxFQUFFO0FBREE7QUFGRCxPQUFELENBQVQ7QUFNRDs7QUFUTSxHQUxJO0FBaUJiTyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsT0FBTyxDQUFDVCxLQUFELEVBQVFVLE1BQVIsRUFBZ0I7QUFDckIsYUFBTyxFQUFFLEdBQUdWLEtBQUw7QUFBWSxXQUFHVSxNQUFNLENBQUNIO0FBQXRCLE9BQVA7QUFDRDs7QUFITyxHQWpCRztBQXNCYkksRUFBQUEsYUFBYSxFQUFFO0FBQ2JDLElBQUFBLEtBQUssQ0FBQztBQUFFQyxNQUFBQSxRQUFGO0FBQVlDLE1BQUFBO0FBQVosS0FBRCxFQUF3QjtBQUMzQkQsTUFBQUEsUUFBUSxDQUFDO0FBQUVQLFFBQUFBLElBQUksRUFBRSxTQUFSO0FBQW1CQyxRQUFBQSxPQUFPLEVBQUU7QUFBRU4sVUFBQUEsS0FBSyxFQUFFO0FBQVQ7QUFBNUIsT0FBRCxDQUFSO0FBQ0Q7O0FBSFk7QUF0QkYsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBrZXkgZnJvbSAna2V5bWFzdGVyJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lc3BhY2U6ICdjb21wMScsXG4gIHN0YXRlOiB7XG4gICAgdmFsdWU6ICfmtYvor5XvvJEnLFxuICB9LFxuICBlZmZlY3RzOiB7XG4gICAgKm1lc3NhZ2UxKF8sIHsgcHV0IH0pIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdlZmZlY3RzJyk7XG4gICAgICB5aWVsZCBwdXQoe1xuICAgICAgICB0eXBlOiAnbWVzc2FnZScsXG4gICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICB2YWx1ZTogJ2VmZmVjdHMgLG1lc3NhZ2UnLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcblxuICByZWR1Y2Vyczoge1xuICAgIG1lc3NhZ2Uoc3RhdGUsIGFjdGlvbikge1xuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIC4uLmFjdGlvbi5wYXlsb2FkIH07XG4gICAgfSxcbiAgfSxcbiAgc3Vic2NyaXB0aW9uczoge1xuICAgIHNldHVwKHsgZGlzcGF0Y2gsIGhpc3RvcnkgfSkge1xuICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnbWVzc2FnZScsIHBheWxvYWQ6IHsgdmFsdWU6ICdjb21wMScgfSB9KTtcbiAgICB9LFxuICAgIC8vIGtleUV2ZW50KHsgZGlzcGF0Y2ggfSkge1xuICAgIC8vICAga2V5KCfijJgrISwgY3RybCsxJywgKCkgPT4ge1xuICAgIC8vICAgICBkaXNwYXRjaCh7IHR5cGU6ICdtZXNzYWdlJyB9KTtcbiAgICAvLyAgIH0pO1xuICAgIC8vIH0sXG4gIH0sXG59O1xuIl19